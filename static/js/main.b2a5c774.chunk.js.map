{"version":3,"sources":["Components/Message.js","Firebase.js","App.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","console","log","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","FormControl","InputLabel","Input","type","value","onChange","e","target","Button","disabled","onClick","preventDefault","add","timestamp","Firebase","FieldValue","serverTimestamp","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVAyBeA,G,MAtBAC,sBAAW,WAAoBC,GAAQ,IAA1BC,EAAyB,EAAzBA,QAEnBC,EAF4C,EAAjBC,WAEPF,EAAQE,SACjC,OAEM,yBAAKH,IAAKA,EAAKI,UAAS,kBAAeF,GAAU,iBAC5CG,QAAQC,IAAIJ,GACd,kBAACK,EAAA,EAAD,CAAOH,UAAWF,EAAQ,mBAAqB,qBAC9C,kBAACM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACAC,MAAM,QACNC,QAAQ,KACRC,UAAU,MACHX,EAAQE,SAJf,KAI2BF,EAAQA,gB,iBCFtCY,EAZKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAGYC,Y,QCmDRC,MAvDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEkBF,mBAAS,IAF3B,mBAENG,EAFM,KAEGC,EAFH,OAGiBJ,mBAAS,IAH1B,mBAGPtB,EAHO,KAGE2B,EAHF,KA2Bb,OAtBAC,qBAAU,WACRlB,EAAGmB,WAAW,YACbC,QAAQ,YAAY,OACpBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAG,CAACC,GAAGD,EAAIC,GAAGtC,QAAQqC,EAAIE,iBAE7D,IAEFT,qBAAU,WACJD,EAAYW,OAAO,6BACvB,IAaA,yBAAKrC,UAAU,OACZ,gDACFC,QAAQC,IAAIsB,GACX,8BACA,kBAACc,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,2BACA,kBAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,MAASpB,EAAOqB,SAAY,SAACC,GAAD,OAAKrB,EAASqB,EAAEC,OAAOH,UACvE,kBAACI,EAAA,EAAD,CAAQC,UAAWzB,EAAOf,QAAQ,YAAYD,MAAM,UAAUmC,KAAM,SAASO,QAlB1D,SAACJ,GAClBA,EAAEK,iBACFxC,EAAGmB,WAAW,YAAYsB,IAAI,CAC5BrD,QAAQyB,EACRvB,SAASA,EACToD,UAAWC,IAASjC,UAAUkC,WAAWC,oBAGvC/B,EAAS,MAUf,kBAOI,kBAAC,IAAD,KAIIC,EAASS,KAAI,YAAiB,IAAfE,EAAc,EAAdA,GAAGtC,EAAW,EAAXA,QAChB,OAAO,kBAAC,EAAD,CAAU0D,IAAKpB,EAAIpC,SAAUA,EAAUF,QAASA,UCjDnE2D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b2a5c774.chunk.js","sourcesContent":["import React,{forwardRef} from 'react'\r\nimport { Card, Typography, CardContent } from '@material-ui/core'\r\nimport \"./message.css\"\r\nconst  Message=forwardRef(({message,username},ref)=> {\r\n\r\n   const isUser = username===message.username; \r\n    return (\r\n       \r\n          <div ref={ref} className = {`message ${isUser && 'message_user'}`}>\r\n              {console.log(isUser)}\r\n             <Card  className={isUser? \"message_userCard\" : \"message_guestCard\"}>\r\n              <CardContent>\r\n                  <Typography\r\n                  color=\"white\"\r\n                  variant=\"h5\"\r\n                  component=\"h2\">\r\n                        {message.username}: {message.message}\r\n                  </Typography>\r\n              </CardContent>\r\n          </Card>\r\n          </div>\r\n       \r\n    )\r\n})\r\n\r\nexport default Message\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCdMmPe1lI1bLUDCyPTn6JEC44RvvEt9Ig\",\r\n    authDomain: \"netflix-clone-222b9.firebaseapp.com\",\r\n    databaseURL: \"https://netflix-clone-222b9.firebaseio.com\",\r\n    projectId: \"netflix-clone-222b9\",\r\n    storageBucket: \"netflix-clone-222b9.appspot.com\",\r\n    messagingSenderId: \"329105990775\",\r\n    appId: \"1:329105990775:web:d244441abb9624d8131272\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import React,{useState,useEffect} from 'react';\nimport {Button,FormControl,Input,InputLabel} from '@material-ui/core'\nimport './App.css';\nimport Message from './Components/Message';\nimport db from './Firebase'\nimport Firebase from 'firebase'\nimport FlipMove from 'react-flip-move'\n\nfunction App() {\n  const [input, setInput] = useState('')\n  const [messages,setMessages] = useState([])\n  const[username,setUsername] = useState('');\n  \n  useEffect(()=>{\n    db.collection('messages')\n    .orderBy('timestamp','asc')\n    .onSnapshot(snapshot=>{\n      setMessages(snapshot.docs.map(doc=>({id:doc.id,message:doc.data()})))\n    })\n  },[])\n\n  useEffect(()=>{\n        setUsername(prompt('Please enter your name'))\n  },[])\n\n  const sendMessage =(e)=>{\n    e.preventDefault();\n    db.collection('messages').add({\n      message:input,\n      username:username,\n      timestamp: Firebase.firestore.FieldValue.serverTimestamp()\n    })\n       \n        setInput('')\n  }\n  return (\n    <div className=\"App\">\n       <h1>Messenger Clone </h1>\n    {console.log(messages)}\n      <form>\n      <FormControl>\n  <InputLabel >Enter a message...</InputLabel>\n  <Input  type=\"text\" value = {input} onChange = {(e)=>setInput(e.target.value)}/>\n  <Button disabled={!input} variant=\"contained\" color=\"primary\" type= \"submit\" onClick={sendMessage}>Send Message</Button>\n</FormControl>\n\n\n       \n       \n      </form>\n      <FlipMove>\n\n\n        {\n          messages.map(({id,message})=>{\n            return <Message  key={id} username={username} message={message}/>\n          })\n        }\n      </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}